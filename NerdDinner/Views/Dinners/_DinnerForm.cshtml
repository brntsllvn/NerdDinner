@model NerdDinner.ViewModels.DinnerFormViewModel
    
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Dinner</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => Model.Dinner.DinnerID)

        <div class="form-group">
            @Html.LabelFor(model => Model.Dinner.Title, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => Model.Dinner.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => Model.Dinner.Title, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.Dinner.EventDate, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => Model.Dinner.EventDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => Model.Dinner.EventDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.Dinner.HostedBy, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => Model.Dinner.HostedBy, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => Model.Dinner.HostedBy, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.Dinner.Address, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => Model.Dinner.Address, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => Model.Dinner.Address, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.Dinner.Country, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("Dinner.Country", Model.Countries, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => Model.Dinner.Country, "", new {@class = "text-danger"})
            </div>
        </div>

        @Html.Hidden("Latitude", Model.Dinner.Latitude)
        @Html.Hidden("Longitude", Model.Dinner.Longitude)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>

    </div>

    <div id="mapDiv">
        @{ Html.RenderPartial("Map", Model.Dinner); }
    </div>

    <script>
        $(document).ready(function() {
            $("#Dinner_Address").blur(function(evt) {
                $("#Latitude").val("");
                $("#Longitude").val("");

                var address = jQuery.trim($("#Dinner_Address").val());
                if (address.length < 1)
                    return;

                FindAddressOnMap(address);
            });
        });
    </script>

}

<div>
    @Html.ActionLink("Back", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
